/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mpsbr.view.cadastraNivel;

import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import mpsbr.control.NivelControl;
import mpsbr.model.Processo;
import mpsbr.model.ResultadoEsperado;
import mpsbr.view.MainView;

/**
 *
 * @author gabriela
 */
public class addREProcessoView extends javax.swing.JPanel {

    private Map<Processo, List<ResultadoEsperado>> procs;
    /**
     * Creates new form addREProcessoView
     */
    public addREProcessoView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        procComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        reList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        oklButton = new javax.swing.JButton();
        novoREButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Cadastro de NÃ­vel");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jLabel2.setText("Selecione o processo: ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        procComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                procComboBoxItemStateChanged(evt);
            }
        });
        procComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procComboBoxActionPerformed(evt);
            }
        });
        add(procComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 190, -1));

        jScrollPane3.setViewportView(reList);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 130, 90));

        jLabel3.setText("REs Cadastrados:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        oklButton.setText("OK");
        oklButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oklButtonActionPerformed(evt);
            }
        });
        add(oklButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, -1, -1));

        novoREButton.setText("Adicionar Novo RE");
        novoREButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoREButtonActionPerformed(evt);
            }
        });
        add(novoREButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void procComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_procComboBoxItemStateChanged
        // TODO add your handling code here:
        int i;
        if (evt.getStateChange() == evt.SELECTED) {
          String item = (String) evt.getItem();
          
            for(Processo p : procs.keySet()){
                if(item.equals(p.getCodigo())){
                    String[] arrRe = new String[procs.get(p).size()];
                    i = 0;
                    for (ResultadoEsperado re : procs.get(p)) {
                        arrRe[i] = re.getCodigo();
                        i++;
                    }
                    this.reList.setListData(arrRe);
                    break;
                }
            }
            this.validate();
            this.repaint();
       }
    }//GEN-LAST:event_procComboBoxItemStateChanged

    private void novoREButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoREButtonActionPerformed
        // TODO add your handling code here:
        String processo = (String) this.procComboBox.getSelectedItem();
        if(processo != null)
            NivelControl.getInstance().addREProcess(processo);
        else
            JOptionPane.showMessageDialog(this, "Selecione um Processo para continuar");
    }//GEN-LAST:event_novoREButtonActionPerformed

    private void oklButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oklButtonActionPerformed
        NivelControl nc = NivelControl.getInstance();
        nc.getCnv().loadScreen(nc.getProcessos(), nc.getAp());
        MainView.showPanel(MainView.CADASTRA_NIVEL);
    }//GEN-LAST:event_oklButtonActionPerformed

    private void procComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_procComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton novoREButton;
    private javax.swing.JButton oklButton;
    private javax.swing.JComboBox<String> procComboBox;
    private javax.swing.JList<String> reList;
    // End of variables declaration//GEN-END:variables

    public void loadScreen(Map<Processo, List<ResultadoEsperado>> processos) {
        procs = processos;
        this.procComboBox.removeAllItems();
        for(Processo p : procs.keySet()){
            this.procComboBox.addItem(p.getCodigo());
        }        
        this.validate();
        this.repaint();
        
    }
}
